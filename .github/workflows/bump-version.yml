# .github/workflows/build-test-publish.yml
name: Build, Test, and Publish

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-test:
    name: Build & Test (${{ matrix.os }} | Python ${{ matrix.python-version }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-14]  # macos-13: Intel, macos-14: Apple Silicon
        python-version: [3.9, 3.10, 3.11, 3.12]
        exclude:
          - os: macos-14
            python-version: 3.9  # Adjust if limited support on Apple Silicon

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: python -m pip install -U pip build pytest cibuildwheel

      - name: Build wheel
        run: python -m cibuildwheel --output-dir dist
        env:
          CIBW_ARCHS_MACOS: "x86_64 arm64"
          CIBW_SKIP: "pp* *-musllinux_*"  # Skip PyPy and musl wheels if not needed
          CIBW_TEST_COMMAND: "pytest {project}"

      - name: Upload wheels as artifact
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-py${{ matrix.python-version }}
          path: dist/*.whl

  publish:
    name: Publish to PyPI
    needs: build-test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - uses: actions/checkout@v4

      - name: Download all built wheels
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Flatten dist directory
        run: |
          mkdir final_dist
          find dist -name '*.whl' -exec mv {} final_dist/ \;

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.8.8
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages_dir: final_dist
